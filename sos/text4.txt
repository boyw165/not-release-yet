write-file-functionsThe value of this variable is a list of functions to be called before writing out a buff erto its visited fi le. If one of them returns non-nil, the fi le is considered already writtenand the rest of the functions are not called, nor is the usual code for writing the fi leexecuted.If a function in write-file-functions returns non-nil, it is responsible for makinga backup fi le (if that is appropriate). To do so, execute the following code:(or buffer-backed-up (backup-buffer))You might wish to save the fi le modes value returned by backup-buffer and use that(if non-nil) to set the mode bits of the fi le that you write. This is what save-buffernormally does. See Section 26.1.1 [Making Backup Files], page 511.The hook functions in write-file-functions are also responsible for encoding thedata (if desired): they must choose a suitable coding system and end-of-line conversion(see Section 33.9.3 [Lisp and Coding Systems], page 718), perform the encoding (seeSection 33.9.7 [Explicit Encoding], page 726), and set last-coding-system-used tothe coding system that was used (see Section 33.9.2 [Encoding and I/O], page 717).If you set this hook locally in a buff er, it is assumed to be associated with the fi leorthe way the contents of the buff er were obtained. Thus the variable is marked asapermanent local, so that changing the major mode does not alter a buff er-local value.On the other hand, calling set-visited-file-name will reset it. If this is not whatyou want, you might like to use write-contents-functions instead.Even though this is not a normal hook, you can use add-hook and remove-hook tomanipulate the list. See Section 23.1 [Hooks], page 404.