(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(cua-mode t nil (cua-base))
 '(electric-indent-mode t)
 '(electric-pair-mode t)
 '(global-hl-line-mode t)
 '(global-linum-mode t)
 '(ido-mode (quote both) nil (ido))
 '(imenu-sort-function (quote imenu--sort-by-name))
 '(make-backup-files nil)
 '(package-archives (quote (("gnu" . "http://elpa.gnu.org/packages/") ("elpa" . "http://melpa.milkbox.net/packages/") ("marmalade" . "http://marmalade-repo.org/packages/"))))
 '(show-paren-mode nil)
 '(standard-indent 2)
 '(vc-handled-backends nil)
 '(which-function-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Automaticall add all the sub-directories to load-path.
(defun update-loadpath (base exclude)
  "Add sub-directories recursively to `load-path'.
The `base' should be a directory string and the `exclude' should be a list that to be skipped."
  (dolist (f (directory-files base))
    (let ((name (concat base "/" f)))
      (when (and (file-directory-p name)
                 (not (member f exclude)))
        (update-loadpath name exclude)
        )
      )
    )
  (add-to-list 'load-path base)
  )
(update-loadpath "~/.emacs.d" '("." ".." ".svn" ".git"))

;; Enable `oops-mode'.
(require 'oops)
(oops-mode 1)

;;; helm  ======================================================================
(require 'helm)
;; (helm-mode 1)

;;; projectile =================================================================
(require 'helm-projectile)

;; scroll one line at a time
(setq mouse-wheel-scroll-amount '(1 ((shift) . 1))) ;; one line at a time
(setq mouse-wheel-follow-mouse 't) ;; scroll window under mouse
(setq scroll-step 1) ;; keyboard scroll one line at a time

;; company mode
(add-hook 'after-init-hook 'global-company-mode)

;; ======================== KEY BINDING ========================
;; TODO: Move key-binding to a more generic file.

(when (eq system-type 'darwin)
  (global-set-key (kbd "s-w") 'oops-kill-current-buffer)
  (global-set-key (kbd "s-z") 'oops-undo)
  )

;; ESC
(global-set-key (kbd "<escape>") 'oops-common-escape)
;; Ctrl + ESC
(global-set-key (kbd "C-x <escape>") 'delete-other-windows)

;; Ctrl + w, command + w
(global-set-key (kbd "C-w") 'oops-kill-current-buffer-or-window)
;; Ctrl + d
(global-set-key (kbd "C-d") 'oops-duplicate-lines)
;; Ctrl + shift + d
(global-set-key (kbd "C-S-d") 'oops-kill-lines)
;; Ctrl + z
(global-set-key (kbd "C-z") 'oops-undo)

;; Ctrl + l
(global-set-key (kbd "C-l") 'goto-line)
;; Ctrl + Alt + l
(global-set-key (kbd "C-M-l") 'ido-switch-buffer)

;; Ctrl + /
(global-set-key (kbd "C-/") 'oops-toggle-comment)
;; Alt + /
(global-set-key (kbd "M-/") 'oops-toggle-comment)

;; Ctrl + up
(global-set-key (kbd "C-<up>") 'oops-move-lines-up)
;; Ctrl + down
(global-set-key (kbd "C-<down>") 'oops-move-lines-down)
;; Alt + [
(global-set-key (kbd "M-[") 'his-prev-history)
;; Alt + ]
(global-set-key (kbd "M-]") 'his-next-history)

;; Ctrl + o
(global-set-key (kbd "C-o") 'oops-goto-local-symbol)
;; Ctrl + Shift + o
(global-set-key (kbd "C-S-o") 'oops-goto-global-symbol)

;; Ctrl + x, Ctrl + b
(global-set-key (kbd "C-x C-b") 'ido-switch-buffer)

;; Alt + left/right/up/down
(global-set-key (kbd "M-<left>") 'oops-windmove-left)
(global-set-key (kbd "M-<right>") 'oops-windmove-right)
(global-set-key (kbd "M-<up>") 'oops-windmove-up)
(global-set-key (kbd "M-<down>") 'oops-windmove-down)

;; TAB
(global-set-key "\t" 'oops-indent-or-company)

;; F1
;; F2
(global-set-key (kbd "<f2>") 'hl-thing-at-point)
;; F3
(global-set-key (kbd "<f3>") 'hl-thing-find-forward)
;; F4
(global-set-key (kbd "<f4>") 'oops-jump-to-definition-atpt)

;; Shift + F1
;; Shift + F2
(global-set-key (kbd "S-<f2>") 'hl-thing-remove-all)
;; Shift + F3
(global-set-key (kbd "S-<f3>") 'hl-thing-find-backward)
;; Shift + F4

;; HOME
(global-set-key (kbd "<home>") 'move-beginning-of-line)
;; END
(global-set-key (kbd "<end>") 'move-end-of-line)

